0.0honggfuzz的下载
    git clone https://github.com/google/honggfuzz --depth=1
linux依赖
    sudo apt install libbfd-dev libunwind-dev clang 
编译安装
    make;sudo make install

1.0简单使用honggfuzz
编译
    hfuzz-clang -o test test.c -w
运行
    mkdir tmp;vim case
    honggfuzz -i tmp/ -x -- ./fuzz ___FILE___
    ./test SIGSEGV...                       #查看崩溃

2.0持久性fuzz（一般用来fuzz api接口）
    vim test.c;vim test.h
    vim fuzz.c;
fuzz.c使用的例子
    #include "test.h"
    int LLVMFuzzerTestOneInput(参数与test的函数一致)
    {
        VulnerableFunction(test的参数传参);
        return 0;
    }
编译
    hfuzz-clang -o fuzz fuzz.c test.c -w    #要将test程序和写的fuzz程序一起编译进来
    honggfuzz -i /tmp -P -x -- ./fuzz       #这里不需要___FILE___ 

3.0持久性fuzz的另外一种模式
    vim test.c;vim test.h
    vim fuzz.c
fuzz.c的使用例子
    #include "test.h"
    extern HF_ITER(char** buf,int* len);
    int main()
    {
        while(1)
        {
            int len;                        #参数的声明
            char* buf;                      #参数的声明
            HF_ITER(&buf,&len);             #当vul函数有多个复杂的参数时，使用HF_ITER可以传递多个参数
            VulnerableFunction(buf,len);
        }
    }
编译
    hfuzz-clang -o fuzz fuzz.c test.c 
运行
    honggfuzz -i tmp/ -P -x -- ./fuzz 

4.0源码学习资料
https://riusksk.me/tags/honggfuzz/


